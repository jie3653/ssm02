<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>ssm02</display-name>
  <!-- 加载spring容器 -->
  <context-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring/applicationContext-*.xml</param-value>
  </context-param>
  <listener>
  		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 配置spring mvc 前端控制器 -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置参数
    	通过contextConfigLocation参数配置springmvc
    	加载的配置文件springmvc.xml（映射处理器，映射器等）
    	若不配置，默认加载的是/WEB-INF/servlet名称-springmvc.xml
    	即/WEB-INF/Dispatcher-springmvc.xml) -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
     <!--  直接放在resourse下，访问路径：classpath:springmvc.xml）
      或者直接放在WEB-INF下，访问路径：/WEB-INF/springmvc.xml -->
      <param-value>classpath:spring/springmvc.xml</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>dispatcherServlet</servlet-name>
  	<!-- 第一种：*.action 访问以.action结尾的，都由DispatcherServlet解析
  	     第二种：/ 所有访问的地址都由DispatcherServlet解析（
  	     	对于静态文件的解析，需要配置不让DispatcherServlet解析） 
  	  第三种：/* 错误的配置-->
  	<url-pattern>*.action</url-pattern>
  </servlet-mapping>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>